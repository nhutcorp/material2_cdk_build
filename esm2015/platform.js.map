{"version":3,"file":"platform.js","sources":["../../../src/cdk/platform/index.ts","../../../src/cdk/platform/public_api.ts","../../../src/cdk/platform/features.ts","../../../src/cdk/platform/platform.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {PlatformModule,Platform,getSupportedInputTypes} from './public_api';\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule} from '@angular/core';\r\nimport {Platform} from './platform';\nexport class PlatformModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  providers: [Platform]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PlatformModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformModule.ctorParameters;\n}\n\r\n\r\n\r\nexport {Platform} from './platform';\r\nexport {getSupportedInputTypes} from './features';\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Cached result Set of input types support by the current browser.\n */\nlet supportedInputTypes: Set<string>;\n/**\n * Types of <input> that *might* be supported.\n */\nconst candidateInputTypes = [\r\n  // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\r\n  // first changing it to something else:\r\n  // The specified value \"\" does not conform to the required format.\r\n  // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\r\n  'color',\r\n  'button',\r\n  'checkbox',\r\n  'date',\r\n  'datetime-local',\r\n  'email',\r\n  'file',\r\n  'hidden',\r\n  'image',\r\n  'month',\r\n  'number',\r\n  'password',\r\n  'radio',\r\n  'range',\r\n  'reset',\r\n  'search',\r\n  'submit',\r\n  'tel',\r\n  'text',\r\n  'time',\r\n  'url',\r\n  'week',\r\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nexport function getSupportedInputTypes(): Set<string> {\r\n  // Result is cached.\r\n  if (supportedInputTypes) {\r\n    return supportedInputTypes;\r\n  }\r\n\r\n  // We can't check if an input type is not supported until we're on the browser, so say that\r\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\r\n  // just a helper function and can't inject it.\r\n  if (typeof document !== 'object' || !document) {\r\n    supportedInputTypes = new Set(candidateInputTypes);\r\n    return supportedInputTypes;\r\n  }\r\n\r\n  let /** @type {?} */ featureTestInput = document.createElement('input');\r\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\r\n    // featureTestInput.setAttribute('type', value);\r\n    // return featureTestInput.type === value;\r\n    return value !== null;\r\n  }));\r\n\r\n  return supportedInputTypes;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Injectable} from '@angular/core';\r\n\r\n// Whether the current platform supports the V8 Break Iterator. The V8 check\r\n// is necessary to detect all Blink based browsers.\r\nconst /** @type {?} */ hasV8BreakIterator = (typeof(Intl) !== 'undefined' && ( /** @type {?} */((Intl as any))).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\rchecking browser-specific global properties.\r\\@docs-private\n */\nexport class Platform {\r\n  isBrowser: boolean = typeof document === 'object' && !!document;\n/**\n * Layout Engines\n */\nEDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\r\n  TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n\r\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\r\n  BLINK = this.isBrowser &&\r\n      (!!(( /** @type {?} */((window as any))).chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT);\r\n\r\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\r\n  // ensure that Webkit runs standalone and is not used as another engine's base.\r\n  WEBKIT = this.isBrowser &&\r\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n/**\n * Browsers and Platform Types\n */\nIOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\r\n\r\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\r\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\r\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\r\n  // instead of having an unstable check for Gecko.\r\n  FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\r\n\r\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\r\n  ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\r\n\r\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\r\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\r\n  // Safari browser should also use Webkit as its layout engine.\r\n  SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Platform_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatform.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatform.ctorParameters;\n/** @type {?} */\nPlatform.prototype.isBrowser;\n/**\n * Layout Engines\n * @type {?}\n */\nPlatform.prototype.EDGE;\n/** @type {?} */\nPlatform.prototype.TRIDENT;\n/** @type {?} */\nPlatform.prototype.BLINK;\n/** @type {?} */\nPlatform.prototype.WEBKIT;\n/**\n * Browsers and Platform Types\n * @type {?}\n */\nPlatform.prototype.IOS;\n/** @type {?} */\nPlatform.prototype.FIREFOX;\n/** @type {?} */\nPlatform.prototype.ANDROID;\n/** @type {?} */\nPlatform.prototype.SAFARI;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}