{"version":3,"file":"cdk-bidi.umd.min.js","sources":["../../src/cdk/bidi/directionality.ts","../../src/cdk/bidi/dir.ts","../../src/cdk/bidi/public_api.ts","../../src/cdk/bidi/index.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {\r\n  EventEmitter,\r\n  Injectable,\r\n  Optional,\r\n  SkipSelf,\r\n  Inject,\r\n  InjectionToken,\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/platform-browser';\r\n\r\n\r\nexport type Direction = 'ltr' | 'rtl';\n/**\n * Injection token used to inject the document into Directionality.\rThis is used so that the value can be faked in tests.\r\rWe can't use the real document in tests because changing the real `dir` causes geometry-based\rtests in Safari to fail.\r\rWe also can't re-provide the DOCUMENT token from platform-brower because the unit tests\rthemselves use things like `querySelector` in test code.\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('md-dir-doc');\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\rExposes the current direction and a stream of direction changes.\n */\nexport class Directionality {\r\n  readonly value: Direction = 'ltr';\r\n  readonly change = new EventEmitter<void>();\n/**\n * @param {?=} _document\n */\nconstructor(  _document?: any) {\r\n    if (_document) {\r\n      // TODO: handle 'auto' value -\r\n      // We still need to account for dir=\"auto\".\r\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\r\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\r\n      const bodyDir = _document.body ? _document.body.dir : null;\r\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\r\n      this.value = (bodyDir || htmlDir || 'ltr') as Direction;\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT, ] }, ]},\n];\n}\n\nfunction Directionality_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectionality.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectionality.ctorParameters;\n/** @type {?} */\nDirectionality.prototype.value;\n/** @type {?} */\nDirectionality.prototype.change;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDirectionality\n * @param {?} _document\n * @return {?}\n */\nexport function DIRECTIONALITY_PROVIDER_FACTORY(parentDirectionality, _document) {\r\n  return parentDirectionality || new Directionality(_document);\r\n}\n/**\n * \\@docs-private\n */\nexport const DIRECTIONALITY_PROVIDER = {\r\n  // If there is already a Directionality available, use that. Otherwise, provide a new one.\r\n  provide: Directionality,\r\n  deps: [[new Optional(), new SkipSelf(), Directionality], [new Optional(), DOCUMENT]],\r\n  useFactory: DIRECTIONALITY_PROVIDER_FACTORY\r\n};\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {\r\n  Directive,\r\n  Output,\r\n  Input,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport {Direction, Directionality} from './directionality';\n/**\n * Directive to listen for changes of direction of part of the DOM.\r\rWould provide itself in case a component looks for the Directionality service\n */\nexport class Dir implements Directionality {\n/**\n * Layout direction of the element.\n */\n_dir: Direction = 'ltr';\n/**\n * Whether the `value` has been set to its initial value.\n */\nprivate _isInitialized: boolean = false;\n/**\n * Event emitted when the direction changes.\n */\nchange = new EventEmitter<void>();\n/**\n * \\@docs-private\n * @return {?}\n */\nget dir(): Direction {\r\n    return this._dir;\r\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset dir(v: Direction) {\r\n    let /** @type {?} */ old = this._dir;\r\n    this._dir = v;\r\n    if (old !== this._dir && this._isInitialized) {\r\n      this.change.emit();\r\n    }\r\n  }\n/**\n * Current layout direction of the element.\n * @return {?}\n */\nget value(): Direction { return this.dir; }\n/**\n * Initialize once default value has been set.\n * @return {?}\n */\nngAfterContentInit() {\r\n    this._isInitialized = true;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[dir]',\r\n  providers: [{provide: Directionality, useExisting: Dir}],\r\n  host: {'[dir]': 'dir'},\r\n  exportAs: 'dir',\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'change': [{ type: Output, args: ['dirChange', ] },],\n'dir': [{ type: Input, args: ['dir', ] },],\n};\n}\n\nfunction Dir_tsickle_Closure_declarations() {\n/** @type {?} */\nDir.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDir.ctorParameters;\n/** @type {?} */\nDir.propDecorators;\n/**\n * Layout direction of the element.\n * @type {?}\n */\nDir.prototype._dir;\n/**\n * Whether the `value` has been set to its initial value.\n * @type {?}\n */\nDir.prototype._isInitialized;\n/**\n * Event emitted when the direction changes.\n * @type {?}\n */\nDir.prototype.change;\n}\n\r\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/platform-browser';\r\nimport {Dir} from './dir';\r\nimport {DIR_DOCUMENT, Directionality} from './directionality';\r\n\r\nexport {\r\n  Directionality,\r\n  DIRECTIONALITY_PROVIDER_FACTORY,\r\n  DIRECTIONALITY_PROVIDER,\r\n  DIR_DOCUMENT,\r\n  Direction,\r\n} from './directionality';\r\nexport {Dir} from './dir';\nexport class BidiModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  exports: [Dir],\r\n  declarations: [Dir],\r\n  providers: [\r\n    {provide: DIR_DOCUMENT, useExisting: DOCUMENT},\r\n    Directionality,\r\n  ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BidiModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBidiModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBidiModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Directionality,DIRECTIONALITY_PROVIDER_FACTORY,DIRECTIONALITY_PROVIDER,DIR_DOCUMENT,Direction,Dir,BidiModule} from './public_api';\n"],"names":["DIRECTIONALITY_PROVIDER_FACTORY","parentDirectionality","_document","Directionality","this","value","change","EventEmitter","htmlDir","documentElement","dir","bodyDir","decorators","type","Injectable","ctorParameters","undefined","Optional","Inject","args","DIR_DOCUMENT","DIRECTIONALITY_PROVIDER","provide","deps","SkipSelf","DOCUMENT","useFactory","Dir","Object","defineProperty","prototype","get","_dir","set","v","old","_isInitialized","emit","enumerable","configurable","ngAfterContentInit","providers","useExisting","host","[dir]","exportAs","propDecorators","Output","Input","BidiModule","declarations"],"mappings":";;;;;;;+XAoFA,SAAAA,GAAgDC,EAAsBC,GACpE,MAAOD,IAAwB,GAAIE,GAAeD,uEA/CzC,GAIXE,KAAAC,MAAA,MALWD,KAAXE,OAAA,GAAmCC,GAAnCA,aACAL,EAAA,8BAUAM,EAAAN,EAAAO,gBAAgDP,EAAhDO,gBAAAC,IAAA,IACMN,MAANC,MAAAM,GAA+BH,GAA/B,OAGA,MAAAL,KAOGA,GAAHS,aALEC,KAAMC,EAARA,aAKOX,EAAPY,eAAwF,WAAxF,QACCF,SAPCG,GAAAJ,aAAAC,KAAAI,EAOFA,WAPEJ,KAAAK,EAOFA,OAPEC,MAAAC,OAqCF,IAAAC,IAZEC,QAAAnB,EAeAoB,OAAQ,GAAIN,GAAdA,SAA0B,GAAIO,GAA9BA,SAA0CrB,IAAkB,GAAIc,GAAhEA,SAA4EQ,EAA5EA,WACEC,WAAY1B,gBCxEd,QAAA2B,2EAiDA,MAWAC,QAAAC,eAAAF,EAAAG,UAAA,OA3CIC,IAAJ,WACA,MAAe3B,MAAK4B,MAMhBC,IALe,SAKnBC,GACA,GAAAC,GALmC/B,KAAA4B,IAM3B5B,MALI4B,KAKZE,EACAC,IALM/B,KAAA4B,MAAA5B,KAKNgC,gBACUhC,KAAVE,OAAsB+B,mHAYtBC,YAAA,EACIC,cAAJ,IAKAZ,EAAAG,UAAAU,mBATkB,WAClBpC,KAAAgC,gBAAA,GAWAT,6DANAc,YAYEnB,QAZFnB,EAAAuC,YAAAf,IAEAgB,MAAAC,QAAA,OAYAC,SAAA,UCxDiClB,EAAjCZ,eAAiC,WAAjC,UAAAY,EAAAmB,gBACAxC,SAAAO,KAASkC,EAATA,OAAA5B,MAAA,eACAT,MAAAG,KAAAmC,EAAAA,MAAA7B,MACkB,SAClB,IAAA8B,GAAA,WACA,QAAAA,MAEA,MAAAA,wDAIAC,cAAAvB,eClCAL,QAAAF,EAAAsB,YAAAjB,EAAAA"}